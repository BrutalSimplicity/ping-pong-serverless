service: ping-service

provider:
  name: aws
  runtime: python3.8
  deploymentBucket:
    name: ${cf:pong-service-${opt:stage}.ServerlessDeploymentBucketName}
  environment:
    PYTHONPATH: /var/task/src:$PYTHONPATH
    PONG_FUNCTION_ARN: ${self:custom.pongFunctionArn}
  memorySize: 128
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - lambda:InvokeFunction
      Resource: ${self:custom.pongFunctionArn}
    - Effect: 'Allow'
      Action:
        - events:PutEvents
      Resource: !Join ["", [ "arn:aws:events:${opt:region}:", !Ref AWS::AccountId, ":event-bus/*"]]
  resourcePolicy:
    - Effect: Deny
      Action:
        - execute-api:Invoke
      Principal: "*"
      Resource:
        - arn:aws:execute-api:us-east-1:*:*/${opt:stage}/*
      Condition:
        StringNotLike:
          aws:PrincipalArn:
            - arn:aws:iam::*:role/swa/SWACSCloudAdmin
            - arn:aws:iam::*:role/swa/SWACSDevelope

custom:
  pongFunctionArn: ${cf:pong-service-${opt:stage}.LambdaFunctionArn}

plugins:
  - serverless-python-requirements

package:
  exclude:
    - "**/*"
  include:
    - '!.**'
    - src/**

functions:
  ping:
    handler: src/index.handler
    tracing: Active
    events:
      - http:
          authorizer: aws_iam
          path: /
          method: get
